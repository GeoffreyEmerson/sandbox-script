#!/bin/bash

# Automatic sandbox generator

# Check for a sandbox name.
if [ "$1" != "" ]; then

  # Check to make sure it's not a duplicate of an existing directory.
  if [ ! -d "./$1" ]; then

    # Make the new directory and navigate into it.
    mkdir -p ./$1
    cd ./$1

    # Make the HTML file.
    printf '<!DOCTYPE html>\n' > index.html
    printf '<html>\n' >> index.html
    printf '  <head>\n' >> index.html
    printf '    <meta charset="utf-8">\n' >> index.html
    printf '    <title>%s</title>\n' $1 >> index.html
    printf '    <link rel="stylesheet" href="base.css">\n' >> index.html
    printf '    <script src="https://code.jquery.com/jquery-2.2.4.min.js" integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=" crossorigin="anonymous"></script>' >> index.html
    printf '    <script type="text/javascript" src="script.js"></script>\n' >> index.html
    printf '  </head>\n' >> index.html
    printf '  <body>\n' >> index.html
    printf '    <h1>%s</h1>\n' $1 >> index.html
    printf '  </body>\n' >> index.html
    printf '</html>\n' >> index.html

    # Make the CSS file.
    printf '/* Sandbox for %s */\n' $1 > base.css

    # Make the JS file.
    printf '// Sandbox for %s\n' $1 > script.js
    printf '$(document).ready(function() {\n' >> script.js
    printf '  \n' >> script.js
    printf '});\n' >> script.js

    # This section will redirect all output from the live-server to a log file in ~/.logs
    mkdir ~/.logs 2>/dev/null
    live-server >> ~/.logs/live-server.log 2>&1 &

    # Opens a new window in Atom with the three sandbox files open as tabs.
    atom -n script.js base.css index.html

  else
    ## Abort if the name was already used.
    echo "Error: That sandbox already exists."
  fi

else
  # Abort if no name was given.
  echo "Error: Name of sandbox is required."
fi
